// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.0
// source: practiceService.proto

package practiceProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 所有难度类型
type LevelListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LevelListRequest) Reset() {
	*x = LevelListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelListRequest) ProtoMessage() {}

func (x *LevelListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelListRequest.ProtoReflect.Descriptor instead.
func (*LevelListRequest) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{0}
}

type LevelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelList []*Level `protobuf:"bytes,1,rep,name=LevelList,proto3" json:"LevelList,omitempty"`
}

func (x *LevelListResponse) Reset() {
	*x = LevelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelListResponse) ProtoMessage() {}

func (x *LevelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelListResponse.ProtoReflect.Descriptor instead.
func (*LevelListResponse) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{1}
}

func (x *LevelListResponse) GetLevelList() []*Level {
	if x != nil {
		return x.LevelList
	}
	return nil
}

type Level struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID   string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"name,omitempty"`
	Type int32  `protobuf:"varint,3,opt,name=Type,proto3" json:"type,omitempty"`
}

func (x *Level) Reset() {
	*x = Level{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Level) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level) ProtoMessage() {}

func (x *Level) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level.ProtoReflect.Descriptor instead.
func (*Level) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{2}
}

func (x *Level) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Level) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Level) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 所有难度的所有试卷
type PaperListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PaperListRequest) Reset() {
	*x = PaperListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperListRequest) ProtoMessage() {}

func (x *PaperListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperListRequest.ProtoReflect.Descriptor instead.
func (*PaperListRequest) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{3}
}

type PaperListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperMap map[int32]*PaperList `protobuf:"bytes,1,rep,name=PaperMap,proto3" json:"PaperMap,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PaperListResponse) Reset() {
	*x = PaperListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperListResponse) ProtoMessage() {}

func (x *PaperListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperListResponse.ProtoReflect.Descriptor instead.
func (*PaperListResponse) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{4}
}

func (x *PaperListResponse) GetPaperMap() map[int32]*PaperList {
	if x != nil {
		return x.PaperMap
	}
	return nil
}

type PaperList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperList []*Paper `protobuf:"bytes,1,rep,name=PaperList,proto3" json:"PaperList,omitempty"`
}

func (x *PaperList) Reset() {
	*x = PaperList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaperList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaperList) ProtoMessage() {}

func (x *PaperList) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaperList.ProtoReflect.Descriptor instead.
func (*PaperList) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{5}
}

func (x *PaperList) GetPaperList() []*Paper {
	if x != nil {
		return x.PaperList
	}
	return nil
}

type Paper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=Name,proto3" json:"name,omitempty"`
	Type        int32  `protobuf:"varint,3,opt,name=Type,proto3" json:"type,omitempty"`
	TableStruct string `protobuf:"bytes,4,opt,name=TableStruct,proto3" json:"tableStruct,omitempty"`
}

func (x *Paper) Reset() {
	*x = Paper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Paper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Paper) ProtoMessage() {}

func (x *Paper) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Paper.ProtoReflect.Descriptor instead.
func (*Paper) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{6}
}

func (x *Paper) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Paper) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Paper) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Paper) GetTableStruct() string {
	if x != nil {
		return x.TableStruct
	}
	return ""
}

// 试卷下的所有题目
type QuestionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperID string `protobuf:"bytes,1,opt,name=PaperID,proto3" json:"PaperID,omitempty"`
}

func (x *QuestionListRequest) Reset() {
	*x = QuestionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionListRequest) ProtoMessage() {}

func (x *QuestionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionListRequest.ProtoReflect.Descriptor instead.
func (*QuestionListRequest) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{7}
}

func (x *QuestionListRequest) GetPaperID() string {
	if x != nil {
		return x.PaperID
	}
	return ""
}

type QuestionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionList []*Question `protobuf:"bytes,1,rep,name=QuestionList,proto3" json:"QuestionList,omitempty"`
}

func (x *QuestionListResponse) Reset() {
	*x = QuestionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionListResponse) ProtoMessage() {}

func (x *QuestionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionListResponse.ProtoReflect.Descriptor instead.
func (*QuestionListResponse) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{8}
}

func (x *QuestionListResponse) GetQuestionList() []*Question {
	if x != nil {
		return x.QuestionList
	}
	return nil
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id,omitempty"`
	PaperID     string `protobuf:"bytes,2,opt,name=PaperID,proto3" json:"paperID,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=Name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=Description,proto3" json:"description,omitempty"`
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{9}
}

func (x *Question) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Question) GetPaperID() string {
	if x != nil {
		return x.PaperID
	}
	return ""
}

func (x *Question) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Question) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 试卷所需的表结构
type TableStructRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaperID string `protobuf:"bytes,1,opt,name=PaperID,proto3" json:"PaperID,omitempty"`
}

func (x *TableStructRequest) Reset() {
	*x = TableStructRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableStructRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableStructRequest) ProtoMessage() {}

func (x *TableStructRequest) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableStructRequest.ProtoReflect.Descriptor instead.
func (*TableStructRequest) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{10}
}

func (x *TableStructRequest) GetPaperID() string {
	if x != nil {
		return x.PaperID
	}
	return ""
}

type TableStructResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableStructMap map[string]*TableStruct `protobuf:"bytes,1,rep,name=TableStructMap,proto3" json:"TableStructMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TableStructResponse) Reset() {
	*x = TableStructResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableStructResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableStructResponse) ProtoMessage() {}

func (x *TableStructResponse) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableStructResponse.ProtoReflect.Descriptor instead.
func (*TableStructResponse) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{11}
}

func (x *TableStructResponse) GetTableStructMap() map[string]*TableStruct {
	if x != nil {
		return x.TableStructMap
	}
	return nil
}

type TableStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColumnCommentList []*ColumnComment `protobuf:"bytes,1,rep,name=ColumnCommentList,proto3" json:"ColumnCommentList,omitempty"`
}

func (x *TableStruct) Reset() {
	*x = TableStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableStruct) ProtoMessage() {}

func (x *TableStruct) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableStruct.ProtoReflect.Descriptor instead.
func (*TableStruct) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{12}
}

func (x *TableStruct) GetColumnCommentList() []*ColumnComment {
	if x != nil {
		return x.ColumnCommentList
	}
	return nil
}

type ColumnComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field   string `protobuf:"bytes,1,opt,name=Field,proto3" json:"field,omitempty"`
	Comment string `protobuf:"bytes,2,opt,name=Comment,proto3" json:"comment,omitempty"`
}

func (x *ColumnComment) Reset() {
	*x = ColumnComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_practiceService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColumnComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnComment) ProtoMessage() {}

func (x *ColumnComment) ProtoReflect() protoreflect.Message {
	mi := &file_practiceService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnComment.ProtoReflect.Descriptor instead.
func (*ColumnComment) Descriptor() ([]byte, []int) {
	return file_practiceService_proto_rawDescGZIP(), []int{13}
}

func (x *ColumnComment) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *ColumnComment) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

var File_practiceService_proto protoreflect.FileDescriptor

var file_practiceService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x61, 0x63, 0x74, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x12, 0x0a, 0x10, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x11, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x09, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xaa, 0x01, 0x0a,
	0x11, 0x50, 0x61, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x50, 0x61, 0x70, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08,
	0x50, 0x61, 0x70, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x1a, 0x4f, 0x0a, 0x0d, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x39, 0x0a, 0x09, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x50, 0x61, 0x70, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x52, 0x09, 0x50, 0x61, 0x70, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x61, 0x0a, 0x05, 0x50, 0x61, 0x70, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x22, 0x2f, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x50, 0x61, 0x70, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x50, 0x61, 0x70, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x73,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6a, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x70, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x70, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x12, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x49, 0x44, 0x22, 0xc8, 0x01, 0x0a, 0x13, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0e, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x4d, 0x61, 0x70, 0x1a, 0x57, 0x0a, 0x13, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53,
	0x0a, 0x0b, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x44, 0x0a,
	0x11, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x11, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x0d, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x32, 0xad, 0x02, 0x0a, 0x0c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x61, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x70, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x3b, 0x67, 0x72, 0x70, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_practiceService_proto_rawDescOnce sync.Once
	file_practiceService_proto_rawDescData = file_practiceService_proto_rawDesc
)

func file_practiceService_proto_rawDescGZIP() []byte {
	file_practiceService_proto_rawDescOnce.Do(func() {
		file_practiceService_proto_rawDescData = protoimpl.X.CompressGZIP(file_practiceService_proto_rawDescData)
	})
	return file_practiceService_proto_rawDescData
}

var file_practiceService_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_practiceService_proto_goTypes = []interface{}{
	(*LevelListRequest)(nil),     // 0: service.LevelListRequest
	(*LevelListResponse)(nil),    // 1: service.LevelListResponse
	(*Level)(nil),                // 2: service.Level
	(*PaperListRequest)(nil),     // 3: service.PaperListRequest
	(*PaperListResponse)(nil),    // 4: service.PaperListResponse
	(*PaperList)(nil),            // 5: service.PaperList
	(*Paper)(nil),                // 6: service.Paper
	(*QuestionListRequest)(nil),  // 7: service.QuestionListRequest
	(*QuestionListResponse)(nil), // 8: service.QuestionListResponse
	(*Question)(nil),             // 9: service.Question
	(*TableStructRequest)(nil),   // 10: service.TableStructRequest
	(*TableStructResponse)(nil),  // 11: service.TableStructResponse
	(*TableStruct)(nil),          // 12: service.TableStruct
	(*ColumnComment)(nil),        // 13: service.ColumnComment
	nil,                          // 14: service.PaperListResponse.PaperMapEntry
	nil,                          // 15: service.TableStructResponse.TableStructMapEntry
}
var file_practiceService_proto_depIdxs = []int32{
	2,  // 0: service.LevelListResponse.LevelList:type_name -> service.Level
	14, // 1: service.PaperListResponse.PaperMap:type_name -> service.PaperListResponse.PaperMapEntry
	6,  // 2: service.PaperList.PaperList:type_name -> service.Paper
	9,  // 3: service.QuestionListResponse.QuestionList:type_name -> service.Question
	15, // 4: service.TableStructResponse.TableStructMap:type_name -> service.TableStructResponse.TableStructMapEntry
	13, // 5: service.TableStruct.ColumnCommentList:type_name -> service.ColumnComment
	5,  // 6: service.PaperListResponse.PaperMapEntry.value:type_name -> service.PaperList
	12, // 7: service.TableStructResponse.TableStructMapEntry.value:type_name -> service.TableStruct
	0,  // 8: service.PaperService.LevelList:input_type -> service.LevelListRequest
	3,  // 9: service.PaperService.PaperList:input_type -> service.PaperListRequest
	7,  // 10: service.PaperService.QuestionList:input_type -> service.QuestionListRequest
	10, // 11: service.PaperService.TableStruct:input_type -> service.TableStructRequest
	1,  // 12: service.PaperService.LevelList:output_type -> service.LevelListResponse
	4,  // 13: service.PaperService.PaperList:output_type -> service.PaperListResponse
	8,  // 14: service.PaperService.QuestionList:output_type -> service.QuestionListResponse
	11, // 15: service.PaperService.TableStruct:output_type -> service.TableStructResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_practiceService_proto_init() }
func file_practiceService_proto_init() {
	if File_practiceService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_practiceService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Level); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaperList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Paper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableStructRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableStructResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_practiceService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColumnComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_practiceService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_practiceService_proto_goTypes,
		DependencyIndexes: file_practiceService_proto_depIdxs,
		MessageInfos:      file_practiceService_proto_msgTypes,
	}.Build()
	File_practiceService_proto = out.File
	file_practiceService_proto_rawDesc = nil
	file_practiceService_proto_goTypes = nil
	file_practiceService_proto_depIdxs = nil
}
